ls_sheets_EIS_2023
tb_EIS_2023_raw <- read_excel(file_EIS_2023, "emis_sum_unit",
col_type = ls_EIS_col_type$col_type,
.name_repair = "universal"
) %>%
rename_with(my_name_repair)
path_EIS_2018 <- "input/eis_report_2018EGU"
file_EIS_2018 <- here(path_EIS, "emis_sum_unit_EGU2018.xlsx")
ls_sheets_EIS <- excel_sheets(file_EIS_2018)
tb_EIS_2018_raw <- read_excel(file_EIS_2018, "emis_sum_unit_EGU2018",
# col_type = ls_EIS_col_type$col_type,
.name_repair = "universal"
) %>%
rename_with(my_name_repair)
#| label: wrangle-EIS-2023
c_filter_EIS <- c(
year_start = 2019L,
year_end = 2023L,
prime_mover = "CS|Turbine"
)
tb_EIS_2023_rename <- tb_EIS_2023_raw %>%
select(all_of(col_names_EIS))
tb_EIS_2023 <- tb_EIS_2023_rename %>%
mutate(prime_mover =
case_when(
str_detect(prime_mover, "Combined Cycle") ~ "CS",
T ~ prime_mover
)) %>%
# filter(between(operating_year_eis,
#                    as.double(c_filter_EIS[["year_start"]]),
#                    as.double(c_filter_EIS[["year_end"]])
#                    )
#        ) %>%
filter(str_detect(prime_mover, c_filter_EIS[["prime_mover"]])) %>%
left_join(tb_states, join_by(state_abb)) %>%
select(-state_abb) %>%
relocate(state, .before = county)
#| label: wrangle-EIS-2018
tb_EIS_2018_rename <- tb_EIS_2018_raw %>%
select(all_of(col_names_EIS))
tb_EIS_2018 <- tb_EIS_2018_rename %>%
mutate(prime_mover =
case_when(
str_detect(prime_mover, "Combined Cycle") ~ "CS",
T ~ prime_mover
)
) %>%
filter(str_detect(prime_mover, c_filter_EIS[["prime_mover"]])) %>%
left_join(tb_states, join_by(state_abb)) %>%
select(-state_abb) %>%
relocate(state, .before = county)
#| label: wrangle-EIS-2023
tb_EIS_2023_rename <- tb_EIS_2023_raw %>%
select(all_of(col_names_EIS))
tb_EIS_2023 <- tb_EIS_2023_rename %>%
mutate(prime_mover =
case_when(
str_detect(prime_mover, "Combined Cycle") ~ "CS",
T ~ prime_mover
)
) %>%
filter(str_detect(prime_mover, c_filter_EIS[["prime_mover"]])) %>%
left_join(tb_states, join_by(state_abb)) %>%
select(-state_abb) %>%
relocate(state, .before = county)
#| label: wrangle-EIS-2018
tb_EIS_2018_rename <- tb_EIS_2018_raw %>%
select(all_of(col_names_EIS))
tb_EIS_2018 <- tb_EIS_2018_rename %>%
mutate(prime_mover =
case_when(
str_detect(prime_mover, "Combined Cycle") ~ "CS",
T ~ prime_mover
)
) %>%
filter(str_detect(prime_mover, c_filter_EIS[["prime_mover"]])) %>%
left_join(tb_states, join_by(state_abb)) %>%
select(-state_abb) %>%
relocate(state, .before = county)
#| label: wrangle-EIS-2023
tb_EIS_2023_rename <- tb_EIS_2023_raw %>%
select(all_of(col_names_EIS))
tb_EIS_2023 <- tb_EIS_2023_rename %>%
mutate(prime_mover =
case_when(
str_detect(prime_mover, "Combined Cycle") ~ "CS",
T ~ prime_mover
)
) %>%
filter(str_detect(prime_mover, c_filter_EIS[["prime_mover"]])) %>%
left_join(tb_states, join_by(state_abb)) %>%
select(-state_abb) %>%
relocate(state, .before = county)
#| label: filter-EIS
tb_EIS_filter <- tb_EIS_2023 %>%
anti_join(tb_EIS_2018)
#| label: filter-EIS
tb_EIS_filter <- tb_EIS_2023 %>%
anti_join(tb_EIS_2018, join_by(unit_id_eis))
tb_EIS_filter
View(tb_EIS_filter)
?anti_oin
?anti_join
View(tb_EIS_2023)
View(tb_EIS_2018)
tb_EIS_2018 <- tb_EIS_2018_rename %>%
mutate(prime_mover =
case_when(
str_detect(prime_mover, "Combined Cycle") ~ "CS",
T ~ prime_mover
)
) %>%
filter(operating_year_eis < c_filter_EIS_2018[["year_end"]]) %>%
filter(str_detect(prime_mover, c_filter_EIS[["prime_mover"]])) %>%
left_join(tb_states, join_by(state_abb)) %>%
select(-state_abb) %>%
relocate(state, .before = county)
#| label: wrangle-EIS-2018
c_filter_EIS_2018 <- c(
year_end = 2019L,
prime_mover = "CS|Turbine"
)
tb_EIS_2018_rename <- tb_EIS_2018_raw %>%
select(all_of(col_names_EIS))
tb_EIS_2018 <- tb_EIS_2018_rename %>%
mutate(prime_mover =
case_when(
str_detect(prime_mover, "Combined Cycle") ~ "CS",
T ~ prime_mover
)
) %>%
filter(operating_year_eis < c_filter_EIS_2018[["year_end"]]) %>%
filter(str_detect(prime_mover, c_filter_EIS[["prime_mover"]])) %>%
left_join(tb_states, join_by(state_abb)) %>%
select(-state_abb) %>%
relocate(state, .before = county)
View(tb_EIS_2018)
tb_EIS_2018 <- tb_EIS_2018_rename %>%
mutate(prime_mover =
case_when(
str_detect(prime_mover, "Combined Cycle") ~ "CS",
T ~ prime_mover
)
) %>%
filter(operating_year_eis < c_filter_EIS_2018[["year_end"]] |
is.na(operating_year_eis)
) %>%
filter(str_detect(prime_mover, c_filter_EIS[["prime_mover"]])) %>%
left_join(tb_states, join_by(state_abb)) %>%
select(-state_abb) %>%
relocate(state, .before = county)
View(tb_EIS_2018)
#| label: col-names-EIS
col_names_EIS <- c(
"sector_name" = "facility_source_type", "primary_naics_code",
"state_abb" = "state", "county",
"plant_code_eis" = "eis_facility_id",
"plant_name" = "site_name", "company_name",
"unit_id_eis" = "eis_unit_id", "unit_id_agency" = "agency_unit_id",
"prime_mover" = "unit_type", "unit_description",
"nameplate_capacity_eis" = "design_capacity",
"capacity_units" = "design_capacity_uom",
"operating_year_eis" = "unit_status_year", "unit_status",
"x_coordinate" = "site_longitude", "y_coordinate" = "site_latitude"
)
col_discard_eis <- c(
"fips_state_code", "tribal_name",
"fips_code", "program_system_code", "agency_facility_id",
"facility_status", "facility_status_year",
"permit_status_start_year", "permit_status_end_year", "reporting_period",
"emissions_operating_type", "pollutant_code", "pollutant_desc",
"total_emissions", "emissions_uom",
"data_set"
)
#| label: state-codes
tb_states <-
tibble(state = state.name,
state_abb = state.abb)
#| label: wrangle-EIS-2018
c_filter_EIS_2018 <- c(
year_end = 2019L,
prime_mover = "CS|Turbine"
)
tb_EIS_2018_rename <- tb_EIS_2018_raw %>%
select(all_of(col_names_EIS))
tb_EIS_2018 <- tb_EIS_2018_rename %>%
mutate(prime_mover =
case_when(
str_detect(prime_mover, "Combined Cycle") ~ "CS",
T ~ prime_mover
)
) %>%
filter(operating_year_eis < c_filter_EIS_2018[["year_end"]] |
is.na(operating_year_eis)
) %>%
filter(str_detect(prime_mover, c_filter_EIS[["prime_mover"]])) %>%
left_join(tb_states, join_by(state_abb)) %>%
select(-state_abb) %>%
relocate(state, .before = county)
#| label: wrangle-EIS-2018
c_filter_EIS_2018 <- c(
year_end = 2019L,
prime_mover = "CS|Turbine",
unit_status = "OP"
)
tb_EIS_2018 <- tb_EIS_2018_rename %>%
mutate(prime_mover =
case_when(
str_detect(prime_mover, "Combined Cycle") ~ "CS",
T ~ prime_mover
)
) %>%
filter(operating_year_eis < c_filter_EIS_2018[["year_end"]] |
is.na(operating_year_eis)
) %>%
filter(str_detect(prime_mover, c_filter_EIS[["prime_mover"]])) %>%
filter(unit_status == c_filter_EIS_2018[["unit_status"]]) %>%
left_join(tb_states, join_by(state_abb)) %>%
select(-state_abb) %>%
relocate(state, .before = county)
#| label: wrangle-EIS-2023
c_filter_EIS_2023 <- c(
year_start = 2019L,
year_end = 2023L,
prime_mover = "CS|Turbine",
unit_status = "OP"
)
tb_EIS_2023_rename <- tb_EIS_2023_raw %>%
select(all_of(col_names_EIS))
tb_EIS_2023 <- tb_EIS_2023_rename %>%
mutate(prime_mover =
case_when(
str_detect(prime_mover, "Combined Cycle") ~ "CS",
T ~ prime_mover
)
) %>%
filter(str_detect(prime_mover, c_filter_EIS[["prime_mover"]])) %>%
filter(unit_status == c_filter_EIS_2023[["unit_status"]]) %>%
left_join(tb_states, join_by(state_abb)) %>%
select(-state_abb) %>%
relocate(state, .before = county)
View(tb_EIS_2023)
#| label: filter-EIS
tb_EIS_filter <- tb_EIS_2023 %>%
anti_join(tb_EIS_2018, join_by(unit_id_eis))
View(tb_EIS_filter)
tb_EIS_unit_summary <- tb_EIS %>%
semi_join(tb_master, join_by(state, county)) #%>%
View(tb_EIS_unit_summary)
tb_EIS_unit_summary <- tb_EIS_filter %>%
semi_join(tb_master, join_by(state, county)) #%>%
View(tb_master)
View(tb_EIS_filter)
View(tb_EIS_2023)
View(tb_master)
View(tb_EIS_2018)
#| label: pre-join-eis
tb_EIS_pre_join <- tb_EIS_2023 %>%
semi_join(tb_master, join_by(state, county)) %>%
group_by(state, county) %>%
filter(n_distinct(plant_code_eis) > 1) %>%
arrange(state, county, plant_code_eis)
tb_master_pre_join <- tb_master %>%
group_by(state, county) %>%
filter(n_distinct(plant_code) > 1) %>%
arrange(state, county, plant_code)
tb_EIS_unit_summary <- tb_EIS_2023 %>%
semi_join(tb_master, join_by(state, county)) #%>%
group_by(state, county, plant_name, company_name) %>%
summarise(n_units = n())
tb_EIS_pre_join <- tb_EIS_2023 %>%
arrange(plant_code, nameplate_capacity_mw) %>%
group_by(plant_code) %>%
mutate(temp_gen_id = seq(n()), .before = unit_id)
View(tb_EIS_pre_join)
tb_master_pre_join <- tb_master %>%
group_by(state, county) %>%
filter(n_distinct(plant_code) > 1) %>%
arrange(state, county, plant_code)
View(tb_master_pre_join)
#| label: pre-join
tb_EIS_pre_join <- tb_EIS_2023 %>%
semi_join(tb_master, join_by(state, county))
tb_EIS_unit_summary <- tb_EIS_pre_join %>%
semi_join(tb_master, join_by(state, county)) #%>%
tb_EIS_ambiguous <- tb_EIS_pre_join %>% group_by(state, county) %>%
filter(n_distinct(plant_code_eis) > 1) %>%
arrange(state, county, plant_code_eis)
tb_master_ambiguous <- tb_master %>%
group_by(state, county) %>%
filter(n_distinct(plant_code) > 1) %>%
arrange(state, county, plant_code)
View(tb_EIS_ambiguous)
View(tb_EIS_pre_join)
View(tb_master)
#| label: wrangle-master
tb_master <- tb_master_raw %>%
mutate(across(matches("is_|has_"), as.logical),
across(contains("capacity"), \(col) as.numeric(col) %>% round(2))
) %>%
arrange(state, county, plant_code, nameplate_capacity_mw_eia)
#| label: pre-join
tb_EIS_pre_join <- tb_EIS_2023 %>%
semi_join(tb_master, join_by(state, county))
tb_EIS_unit_summary <- tb_EIS_pre_join %>%
semi_join(tb_master, join_by(state, county)) #%>%
group_by(state, county, plant_name, company_name) %>%
summarise(n_units = n())
tb_EIS_ambiguous <- tb_EIS_pre_join %>%
group_by(state, county) %>%
filter(n_distinct(plant_code_eis) > 1) %>%
arrange(state, county, plant_code_eis)
tb_master_ambiguous <- tb_master %>%
group_by(state, county) %>%
filter(n_distinct(plant_code) > 1) %>%
arrange(state, county, plant_code)
tb_EIS_ambiguous <- tb_EIS_pre_join %>%
group_by(state, county) %>%
filter(n_distinct(plant_code_eis) > 1) %>%
arrange(state, county, plant_code_eis)
tb_master_ambiguous <- tb_master %>%
group_by(state, county) %>%
filter(n_distinct(plant_code) > 1) %>%
arrange(state, county, plant_code)
View(tb_EIS_ambiguous)
View(tb_EIS_unit_summary)
tb_EIS_unit_summary <- tb_EIS_pre_join %>%
group_by(state, county, plant_name, company_name) %>%
summarise(n_units = n())
View(tb_EIS_unit_summary)
#| label: pre-join-eis-filter
tb_EIS_filter_unit_summary <- tb_EIS_filter %>%
semi_join(tb_master, join_by(state, county)) #%>%
View(tb_EIS_filter_unit_summary)
#| label: pre-join-eis-filter
tb_EIS_filter_prejoin <- tb_EIS_filter %>%
semi_join(tb_master, join_by(state, county))
tb_EIS_filter_unit_summary <- tb_EIS_filter_prejoin %>%
group_by(state, county, plant_name, company_name) %>%
summarise(n_units = n())
View(tb_EIS_filter_prejoin)
tb_EIS_filter_ambiguous <- tb_EIS_filter_prejoin %>%
group_by(state, county) %>%
filter(n_distinct(plant_code_eis) > 1) %>%
arrange(state, county, plant_code_eis)
View(tb_EIS_filter_ambiguous)
tb_EIS_ambiguous_summary <- tb_EIS_ambiguous %>%
summarise(n_plants = n_distinct(plant_code_eis))
View(tb_EIS_ambiguous_summary)
View(tb_master_ambiguous)
View(tb_EIS_2023)
View(tb_master)
?join
install("fuzzyjoin")
install.packages("fuzzyjoin")
#| label: spatial-join
tb_master_plant <- tb_master %>%
distinct(plant_code, .keep_all = T)
View(tb_master_plant)
tb_EIS_plant <- tb_EIS_pre_join %>%
distinct(plant_code_eis, .keep_all = T)
View(tb_EIS_plant)
#| label: spatial-join
tb_master_plant <- tb_master %>%
distinct(plant_code, .keep_all = T) %>%
select(plant_code, plant_name, x_coordinate, y_coordinate)
View(tb_master_plant)
tb_EIS_plant <- tb_EIS_pre_join %>%
distinct(plant_code_eis, .keep_all = T) %>%
select(plant_code_eis, plant_name, x_coordinate, y_coordinate)
View(tb_EIS_plant)
tb_cross_join <- tb_EIS_plant %>%
cross_join(tb_master_plant)
View(tb_cross_join)
?cross_join
tb_cross_join <- tb_EIS_plant %>%
cross_join(tb_master_plant, suffix = c("eis", "master"))
tb_cross_join <- tb_EIS_plant %>%
cross_join(tb_master_plant, suffix = c("_eis", "_master"))
tb_distance <- tb_cross_join %>%
mutate(distance =
sqrt((x_coordinate_eis - x_coordinate_master)^2 +
(y_coordinate_eis - y_coordinate_master)^2)
)
View(tb_distance)
tb_cross_join$x_coordinate_eis[[1]]
#| label: spatial-join
half_mile <- 0.0025
tb_distance <- tb_cross_join %>%
mutate(distance =
sqrt((x_coordinate_eis - x_coordinate_master)^2 +
(y_coordinate_eis - y_coordinate_master)^2)
) %>%
filter(distance <= half_mile)
View(tb_distance)
#| label: spatial-join
half_mile <- 0.0030
tb_distance <- tb_cross_join %>%
mutate(distance =
sqrt((x_coordinate_eis - x_coordinate_master)^2 +
(y_coordinate_eis - y_coordinate_master)^2)
) %>%
filter(distance <= half_mile)
View(tb_distance)
#| label: spatial-join
half_mile <- 0.0050
#| label: spatial-join
radius <- 0.0050
tb_distance <- tb_cross_join %>%
mutate(distance =
sqrt((x_coordinate_eis - x_coordinate_master)^2 +
(y_coordinate_eis - y_coordinate_master)^2)
) %>%
filter(distance <= radius)
tb_master_plant <- tb_master %>%
ungroup() %>%
distinct(plant_code, .keep_all = T) %>%
select(plant_code, plant_name, x_coordinate, y_coordinate)
View(tb_master_plant)
tb_master_plant <- tb_master %>%
# ungroup() %>%
distinct(plant_code, .keep_all = T) %>%
select(plant_code, plant_name, x_coordinate, y_coordinate)
tb_master_plant <- tb_master %>%
ungroup() %>%
distinct(plant_code, .keep_all = T) %>%
select(plant_code, plant_name, x_coordinate, y_coordinate)
tb_EIS_plant <- tb_EIS_pre_join %>%
ungroup() %>%
distinct(plant_code_eis, .keep_all = T) %>%
select(plant_code_eis, plant_name, x_coordinate, y_coordinate)
tb_distance <- tb_cross_join %>%
mutate(distance =
sqrt((x_coordinate_eis - x_coordinate_master)^2 +
(y_coordinate_eis - y_coordinate_master)^2)
) %>%
filter(distance <= radius) %>%
group_by(plant_code) %>%
filter(min(distance))
tb_distance <- tb_cross_join %>%
mutate(distance =
sqrt((x_coordinate_eis - x_coordinate_master)^2 +
(y_coordinate_eis - y_coordinate_master)^2)
) %>%
filter(distance <= radius) %>%
group_by(plant_code) %>%
slice_min(distance)
View(tb_distance)
#| label: libraries
library(tidyverse)
library(readxl)
library(magrittr)
library(here)
library(knitr)
distance <- 2*radius * asin(sqrt(angle_scalar))
#| label: FUNCTION-get-distance
get_distance <- function(lat1, long1, lat2, long2) {
radius <- 6371 * 0.6214 #mi
lat_dif <- sin((lat1 - lat2)/2) ^ 2
long_dif <- sin((long1 - long2)/2) ^ 2
angle_scalar <- lat_dif + cos(lat1) * cos(lat2) * long_dif
distance <- 2*radius * asin(sqrt(angle_scalar))
}
#| label: spatial-join
radius <- 1 #mi
tb_distance <- tb_cross_join %>%
mutate(distance = get_distance(y_coordinate_master, x_coordinate_master,
y_coordinate_eis, x_coordinate_eis)
) %>%
filter(distance <= radius) %>%
group_by(plant_code) %>%
slice_min(distance)
View(tb_distance)
pi
temp1 <- 1
temp2 <- 2
c(temp1, temp2) <- c(4,5)
#| label: FUNCTION-get-distance
get_distance <- function(lat1, long1, lat2, long2) {
radius <- 6371 * 0.6214 #mi
lat1 <- lat1 * pi/180
long1 <- long1 * pi/180
lat2 <- lat2 * pi/180
long2 <- long2 * pi/180
lat_dif <- sin((lat1 - lat2)/2) ^ 2
long_dif <- sin((long1 - long2)/2) ^ 2
angle_scalar <- lat_dif + cos(lat1) * cos(lat2) * long_dif
distance <- 2*radius * asin(sqrt(angle_scalar))
}
tb_distance <- tb_cross_join %>%
mutate(distance = get_distance(y_coordinate_master, x_coordinate_master,
y_coordinate_eis, x_coordinate_eis)
) %>%
filter(distance <= radius) %>%
group_by(plant_code) %>%
slice_min(distance)
View(tb_distance)
n_distinct(tb_master, plant_code)
tb_master
n_distinct(tb_master$plant_code
)
n_distinct(tb_master$plant_code)
n_distinct(tb_distance$plant_code) / n_distinct(tb_master$plant_code) * 100 %>% round(0)
n_distinct(tb_distance$plant_code) / n_distinct(tb_master$plant_code) * 100 %>% round(1)
n_distinct(tb_distance$plant_code) / n_distinct(tb_master$plant_code) * 100 %>% round(., 1)
n_distinct(tb_distance$plant_code) / n_distinct(tb_master$plant_code) * 100
%>% round()
n_distinct(tb_distance$plant_code) / n_distinct(tb_master$plant_code) * 100 %>% round()
n_distinct(tb_distance$plant_code) / n_distinct(tb_master$plant_code) * 100 %>% round(., 1)
round(n_distinct(tb_distance$plant_code) / n_distinct(tb_master$plant_code) * 100, 0)
tb_distance %>% write_csv("master_EIS_match_facility.csv")
tb_distance %>% write_csv("output/master_EIS_match_facility.csv")
